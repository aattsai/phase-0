* {
    color: #000080;
    backround-color: #ffffff;
}

header {
    text-align: center;
    font-weight:bold;
}

header h2 {
    margin:0;
    font-size: large;
}

header h2 span {
    font-size: xx-large;
}
.inc {
    font-size: 13px;
}

header p {
    font-size: 13px;
    margin-top: 0;
}
header p span {
    font-size: 16px;
}

a:link {
    color: #800080;
}
a:visited {
    color: #ff0000;
}
section ul p {
    margin-top:3px;
}
.left {
    float: left;
    max-width: 39%;
    margin-left:4%;
}
.right {
    float: right;
    max-width: 38%;
    margin-right: 3%;
}

section ul p {
    font-size: 11px;
    color: black;
}

aside {
    clear: both;
    display: block;
    text-align: center;
    font-size: x-small;
}

aside img {
    left: 50%
}

aside p {
    margin-top:0;
}

footer {
    clear: both;
    margin-bottom: 14px;
}

section p {
    font-size: small
}

footer p {
    margin-top:18px;
    font-size: x-small;
}
footer p span {
    font-weight:bold;
}
.line {
    width: 100%;
    height: 1px;
    background-color: gray;
}

/*What is important to know when linking an external file (like a stylesheet) to an HTML file?
    To put the link inside the head of the html. Then type in the required attributes, including type, rel, and href.
What tricks did you use to help you with positioning? How hard was it to get the site as you wanted it?
    I actually spent a long time working on positioning the content on the site. One thing that helps is to set value in percentage rather than absolute. In addition, I think it just requires a lot of trial and error to see what works and what doesn't.
What CSS did you use to modify the element style (like size, color, etc.)
    I used color, font-size, font-weight. Looking back, most of the work was done positioning the contents.
Did you modify the HTML to include classes or ids? If so, which did you chose and why? If you didn't, how would you know which one to add to your HTML?
    I modified the HTML file to reflect classes so I can better arrange the content on CSS. Class is better because it can be reused. If I didn't use class, then I would have to call a certain tag by its hierarchy.
When you compared your site to the actual code base, which do you think had cleaner code that followed best practices and why?
    We have a cleaner code per se, because we separated the stylesheet from our HTML. Whereas the actual code put them together. It is a little difficult to read their code because of that.*/
